@page "/categories"
@rendermode InteractiveServer

@using ExpenseTracker.Services
@inject CategoryService Service

<PageTitle>Categories</PageTitle>


<h3>Categories</h3>

<ol>
    @foreach(var cat in @categories)
    {
        <li class="d-flex justify-content-between">
            <div><p>@cat.Name</p></div>
            <button class="btn btn-danger" @onclick = "@(()=>Delete(@cat))">Delete</button>
        </li>
    }
</ol>
<div id="add">
<div><label> Add Category</label></div>
<input type="text" @bind="@Name" placeholder="Enter category name..."/>
<button class="btn btn-success" @onclick = "Add">Add</button>
</div>
@code {
    public string Name { set; get; } = "";
    List<Category> categories = new List<Category>();
    void Delete(Category cat) => Service.Delete(cat);
    //Uses list searching for checking if the name already exists
    //Even if it O(n) at worst, there probably won't be that many categories
    void Add()
    {
        if (Name == "") return;
        foreach(Category s in Service.GetCategories())
            if (s.Name == Name) return;
        Service.Post(new Category { Name = Name });
    }
    protected override void OnInitialized()
    {
        categories = Service.GetCategories();
        Service.OnCategoryChanged += (() => categories = Service.GetCategories());
    }
}
