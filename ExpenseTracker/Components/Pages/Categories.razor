@page "/categories"
@rendermode InteractiveServer

@using ExpenseTracker.Services
@inject CategoryService CategoryService

<PageTitle>Categories</PageTitle>
<h3>Categories</h3>

<ol>
    @foreach(var cat in categories)
    {
        <li class="list-group-item d-flex justify-content-between">
            <p>@cat.Name</p>
            <button class="btn btn-danger" @onclick = "@(()=>Delete(@cat))">Delete</button>
        </li>
    }
</ol>
<label> Add Category : </label>
<input type="text" @bind="@Name"/>

<br />
<button class="btn btn-success" @onclick = "Add">Add</button>
@code {
    public string Name { set; get; } = "";
    int nextId = 4;
    List<Category> categories = new List<Category>();
    void Delete(Category cat) => categories.Remove(cat);
    //Uses list searching for checking if the name already exists
    //Even if it O(n) at worst, there probably won't be that many categories
    void Add()
    {
        if (Name == "") return;
        foreach(Category s in categories)
            if (s.Name == Name) return;
        categories.Add(new Category(nextId++, Name));
    }
    protected override void OnInitialized()
    {
        categories = CategoryService.GetCategories();
    }
}
